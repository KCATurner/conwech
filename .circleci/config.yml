version: 2.1

jobs:

  unit-testing:
    docker:
    - image: python:latest
    steps:
    - checkout
    - run:
        name: "Setup Tests"
        command: |
          python3 -V
          pip3 install . -v
          pip3 install pytest
          pip3 install pytest-cov
          pip3 install pytest-circleci
    - run:
        name: "Run Tests"
        command: pytest tests --junitxml="tests/reports/results.xml"
    - store_test_results:
        path: tests/reports

  auto-release:
    docker:
      - image: python:latest
    steps:
      - add_ssh_keys:
          fingerprints:
            - "4a:30:b4:68:a8:21:16:35:b1:81:90:5f:39:56:32:1b"
      - checkout
      - run:
          name: "Set Git Variables"
          command: |
            git config --global user.email "$GH_EMAIL"
            git config --global user.name "$GH_NAME"
      - run:
          name: "Create Version Tag"
          command: |
            version=v$(date +%Y.%m)
            git tag -f $version
      - run:
          name: "Push Tag to GitHub"
          command: |
            git push -f origin $version

  auto-publish:
    docker:
      - image: python:latest
    steps:
      - add_ssh_keys:
          fingerprints:
            - "4a:30:b4:68:a8:21:16:35:b1:81:90:5f:39:56:32:1b"
      - checkout
      - run:
          name: "Init .pypirc"
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: "Update Twine"
          command: |
            pip3 install twine
      - run:
          name: "Build Package"
          command: |
            python3 setup.py sdist
            python3 setup.py bdist_wheel
      - run:
          name: "Upload Package"
          command: |
            twine upload dist/*

  publish-docs:
    docker:
      - image: python:latest
    steps:
      - add_ssh_keys:
          fingerprints:
            - "4a:30:b4:68:a8:21:16:35:b1:81:90:5f:39:56:32:1b"
      - checkout
      - run:
          name: "Install Package"
          command: pip3 install .
      - run:
          name: "Install Sphinx"
          command: |
            pip3 install git+https://github.com/sphinx-doc/sphinx
            pip3 install sphinxcontrib-autoprogram
            pip3 install sphinx-rtd-theme
      - run:
          name: "Set Git Variables"
          command: |
            git config --global user.email "$GH_EMAIL"
            git config --global user.name "$GH_NAME"
      - run:
          name: "Generate Docs"
          command: |
            sphinx-build -aETb html docs/source docs/latest
            sphinx-build -aETb html docs/source docs/$(cat VERSION)
      - run:
          name: "Push to GitHub"
          command: |
            git add -f docs
            git stash
            git pull origin gh-pages --no-commit
            git checkout stash -- .
            git commit -m "[skip ci] documentation build."
            git push -f origin $(git rev-parse --abbrev-ref HEAD):gh-pages

workflows:
  version: 2

  testing:
    jobs:
      - unit-testing:
          filters:
            branches:
              ignore:
                - master
                - gh-pages

  release:
    jobs:
      - unit-testing:
          filters:
            branches:
              only: master
      - auto-release:
          requires:
            - unit-testing
          filters:
            branches:
              only: master
      - auto-publish:
          requires:
            - unit-testing
            - auto-release
          filters:
            branches:
              only: master
      - publish-docs:
          requires:
            - unit-testing
            - auto-release
          filters:
            branches:
              only: master
